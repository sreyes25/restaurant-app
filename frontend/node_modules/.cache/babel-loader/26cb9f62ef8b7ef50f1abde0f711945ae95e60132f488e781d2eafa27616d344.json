{"ast":null,"code":"import http from \"../http-commons\";\nexport class RestaurantDataService {\n  constructor() {\n    this.deleteReview = (id, userId) => {\n      http.delete(`/review?id=${id}`, {\n        data: {\n          user_id: userId\n        }\n      }).then(response => {\n        console.log(response.data);\n        // update state or perform other actions as needed\n      }).catch(error => {\n        console.error(`Unable to delete review: ${error}`);\n        // handle error as needed\n      });\n    };\n  }\n  getAll() {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return http.get(`?page=${page}`);\n  }\n  get(id) {\n    return http.get(`/id/${id}`);\n  }\n  find(query) {\n    let by = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"name\";\n    let page = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    return http.get(`?${by}=${query}&page=${page}`);\n  }\n  createReview(data) {\n    return http.post(\"/review\", data);\n  }\n  updateReview(data) {\n    return http.put(\"/review\", data);\n  }\n  getCuisines(id) {\n    return http.get(`/cuisines`);\n  }\n}\nexport default new RestaurantDataService();","map":{"version":3,"names":["http","RestaurantDataService","deleteReview","id","userId","delete","data","user_id","then","response","console","log","catch","error","getAll","page","get","find","query","by","createReview","post","updateReview","put","getCuisines"],"sources":["/Users/sergioreyes/WebDev/mern/restaurant/frontend/src/services/restaurant.js"],"sourcesContent":["import http from \"../http-commons\";\n\nexport class RestaurantDataService {\n    getAll(page = 0) {\n        return http.get(`?page=${page}`);\n      }\n    \n      get(id) {\n        return http.get(`/id/${id}`);\n      }\n    \n      find(query, by = \"name\", page = 0) {\n        return http.get(`?${by}=${query}&page=${page}`);\n      } \n    \n      createReview(data) {\n        return http.post(\"/review\", data);\n      }\n    \n      updateReview(data) {\n        return http.put(\"/review\", data);\n      } \n    \n      deleteReview = (id, userId) => {\n        http.delete(`/review?id=${id}`, { data: { user_id: userId } })\n          .then(response => {\n            console.log(response.data);\n            // update state or perform other actions as needed\n          })\n          .catch(error => {\n            console.error(`Unable to delete review: ${error}`);\n            // handle error as needed\n          });\n      };\n      \n      getCuisines(id) {\n        return http.get(`/cuisines`);\n      }\n}\nexport default new RestaurantDataService();\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,iBAAiB;AAElC,OAAO,MAAMC,qBAAqB,CAAC;EAAA;IAAA,KAqB7BC,YAAY,GAAG,CAACC,EAAE,EAAEC,MAAM,KAAK;MAC7BJ,IAAI,CAACK,MAAM,CAAE,cAAaF,EAAG,EAAC,EAAE;QAAEG,IAAI,EAAE;UAAEC,OAAO,EAAEH;QAAO;MAAE,CAAC,CAAC,CAC3DI,IAAI,CAACC,QAAQ,IAAI;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACH,IAAI,CAAC;QAC1B;MACF,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAI;QACdH,OAAO,CAACG,KAAK,CAAE,4BAA2BA,KAAM,EAAC,CAAC;QAClD;MACF,CAAC,CAAC;IACN,CAAC;EAAA;EA9BHC,MAAM,GAAW;IAAA,IAAVC,IAAI,uEAAG,CAAC;IACX,OAAOf,IAAI,CAACgB,GAAG,CAAE,SAAQD,IAAK,EAAC,CAAC;EAClC;EAEAC,GAAG,CAACb,EAAE,EAAE;IACN,OAAOH,IAAI,CAACgB,GAAG,CAAE,OAAMb,EAAG,EAAC,CAAC;EAC9B;EAEAc,IAAI,CAACC,KAAK,EAAyB;IAAA,IAAvBC,EAAE,uEAAG,MAAM;IAAA,IAAEJ,IAAI,uEAAG,CAAC;IAC/B,OAAOf,IAAI,CAACgB,GAAG,CAAE,IAAGG,EAAG,IAAGD,KAAM,SAAQH,IAAK,EAAC,CAAC;EACjD;EAEAK,YAAY,CAACd,IAAI,EAAE;IACjB,OAAON,IAAI,CAACqB,IAAI,CAAC,SAAS,EAAEf,IAAI,CAAC;EACnC;EAEAgB,YAAY,CAAChB,IAAI,EAAE;IACjB,OAAON,IAAI,CAACuB,GAAG,CAAC,SAAS,EAAEjB,IAAI,CAAC;EAClC;EAcAkB,WAAW,CAACrB,EAAE,EAAE;IACd,OAAOH,IAAI,CAACgB,GAAG,CAAE,WAAU,CAAC;EAC9B;AACN;AACA,eAAe,IAAIf,qBAAqB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}